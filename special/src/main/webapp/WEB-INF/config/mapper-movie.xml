<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.koitt.movie.dao.MovieDaoImpl">		
		
	<insert id="insert" parameterType="Movie">
		<selectKey keyProperty="mno" resultType="Integer" order="BEFORE">
			SELECT mno_seq.NEXTVAL mno FROM DUAL			
		</selectKey>
		INSERT INTO Movie(mno,title,content,genre,grade,mrun,sdate,edate,post)
		VALUES (#{mno},#{title},#{content},#{genre},#{grade},#{mrun},#{sdate},#{edate},#{post})
	</insert>

	<insert id="insert-schedule" parameterType="Schedule">
		<selectKey keyProperty="Scount" resultType="Integer" order="BEFORE">
			SELECT SEQ_SCOUNT.NEXTVAL Scount FROM DUAL			
		</selectKey>	
		INSERT INTO SCHEDULE VALUES (#{rdate}, #{Scount}, #{mno})
	</insert>
		
	<insert id="insert-seat" parameterType="Seat" statementType="CALLABLE">		
		 { CALL insert_seat(#{tno},#{Scount}) }
	</insert>											
														
	<insert id="comment-eroll" parameterType="Comment">	
		<selectKey keyProperty="cno" resultType="Integer" order="BEFORE">
			SELECT seq_cno.NEXTVAL cno FROM DUAL		
		</selectKey>									
		INSERT INTO MOVIE_COMMENT VALUES (SEQ_CNO.NEXTVAL, #{mno}, #{id}, #{mcomment}, #{score},#{vcount}, sysdate)
	</insert>		
		
	<insert id="insert-actors" parameterType="Actors">
		<selectKey keyProperty="ano" resultType="Integer" order="BEFORE">
			SELECT SEQ_ANo.NEXTVAL ano FROM DUAL			
		</selectKey>	
		INSERT INTO Actors VALUES(#{ano},#{mno},#{name},#{job},#{photo})
	</insert>
	
	<insert id="insert-Intro" parameterType="Intro">
		<selectKey keyProperty="Ino" resultType="Integer" order="BEFORE">
			SELECT SEQ_INO.NEXTVAL Ino FROM DUAL			
		</selectKey>	
		INSERT INTO MOVIE_INTRO VALUES(#{Ino},#{mno},#{image},#{video})
	</insert>	
	
	<select id="select-Intro" parameterType="Integer" resultType="Intro">
		SELECT * FROM MOVIE_INTRO WHERE mno = #{mno}
	</select>
	
	<select id="select-actors" parameterType="Integer" resultType="Actors">
		SELECT * FROM Actors WHERE mno = #{mno}
	</select>
							
	<select id="select" parameterType="String" resultType="Movie">
		SELECT * FROM Movie	WHERE mno = #{mno}
	</select>

	<select id="selectAll" resultType="Movie">
		SELECT * FROM MOVIE
	</select>
	
	<select id="commentAll" parameterType="Integer" resultType="Comment">
		SELECT *FROM MOVIE_COMMENT WHERE mno = #{mno} order by ctime desc
	</select>
	
	<select id="commentSelect" parameterType="Integer" resultType="Comment">		
		SELECT * FROM MOVIE_COMMENT WHERE CNO = #{cno}
	</select>
	
	<select id="PageCount" parameterType="Integer" resultType="Integer">		
		SELECT CEIL(COUNT(*)/5) allpages FROM movie_comment WHERE mno = #{mno}
	</select>	
	
	<select id="PagingCount" parameterType="Paging" resultType="Comment">
		SELECT * FROM 
		(SELECT ROWNUM R,movie_comment.* FROM movie_comment ORDER BY ctime DESC)
		WHERE r BETWEEN ((#{curPage}-1)*5)+1 AND (#{curPage}*5) AND mno = #{mno}
	</select>

	<select id="totalScore" parameterType="Integer" resultType="Integer">
		select NVL(sum(score)/NULLIF(count(*),0),0) from movie_comment WHERE mno = #{mno}
	</select>
	
	<select id="totalView" parameterType="Integer" resultType="Integer">
		SELECT COUNT(*) FROM RESERVATION WHERE MNO = #{mno} 
	</select>
	
	<select id="ReserveRate" parameterType="Integer" resultType="Integer">
		SELECT NVL((SELECT COUNT(*) FROM RESERVATION) / NULLIF((SELECT COUNT(*) FROM SCHEDULE SC, SEAT S WHERE SC.SCOUNT = S.SCOUNT AND MNO = #{mno}), 0 ), 0 ) 
		FROM DUAL
	</select>
	
	<delete id="delete" parameterType="String">
		DELETE FROM MOVIE WHERE	mno= #{mno}
	</delete>

	<update id="update" parameterType="Movie">
		UPDATE movie 
		SET title = #{title}, content = #{content}, genre = #{genre}, grade = #{grade}, mrun = #{mrun}, sdate = #{sdate}, edate = #{edate}, post = #{post} 
		WHERE mno = #{mno}
	</update>
	
	<update id="Vcountup" parameterType="Comment">
		UPDATE MOVIE_COMMENT
		SET VCOUNT = VCOUNT+1
		WHERE MNO = #{mno} AND CNO = #{cno}
	</update>	
	
	<delete id="comment_delete" parameterType="Integer">	
		DELETE FROM MOVIE_COMMENT WHERE cno = #{cno}
	</delete>
</mapper>